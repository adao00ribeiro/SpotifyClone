@inject IManagerSpotifyLocalStorageService SpotifylocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider _authStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" OnNavigateAsync="OnNavigateAsync">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <!-- Conteúdo para exibir quando o usuário não tem permissão -->
                    <p role="alert">Você não tem permissão para acessar esta página.</p>
                    <RedirectToLogin></RedirectToLogin>
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
@code {
    private async Task OnNavigateAsync(NavigationContext args)
    {

        var user = (await (_authStateProvider as CustomAuthenticationStateProvider)
        .GetAuthenticationStateAsync()).User;
        if (!user.Identity.IsAuthenticated)
        {
            var session = await SpotifylocalStorage.GetUserSession();

            await (_authStateProvider as CustomAuthenticationStateProvider).UpdateAuthenticationState(session);

        }else{
            Console.WriteLine("esta autenticado");
        }
    }
}